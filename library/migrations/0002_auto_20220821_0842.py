# Generated by Django 3.2.15 on 2022-08-21 08:42

from django.db import migrations
import datetime


author_info_list = [
    {
        "first_name": "Теодор",
        "last_name": "Драйзер",
        "birthday": "1871-08-27",
        "books": [
            {
                "name": "Финансист",
                "publish_date": '1912-01-01'
            },
            {
                "name": "Титан",
                "publish_date": '1914-01-01'
            },
            {
                "name": "Стоик",
                "publish_date": '1947-01-01'
            },
        ]
    },
    {
        "first_name": "Янка",
        "last_name": "Мавр",
        "birthday": "1883-04-29",
        "books": [
            {
                "name": "Вокруг мира",
                "publish_date": '1947-01-01'
            },
        ]
    },
    {
        "first_name": "Альбер",
        "last_name": "Камю",
        "birthday": "1913-11-07",
        "books": [
            {
                "name": "Чума",
                "publish_date": '1947-01-01'
            },
            {
                "name": "Посторонний",
                "publish_date": '1942-01-01'
            },
        ]
    },
    {
        "first_name": "Дик",
        "last_name": "Френсис",
        "birthday": "1920-10-31",
        "books": [
            {
                "name": "Бойня",
                "publish_date": '1986-01-01'
            },
        ]
    },
    {
        "first_name": "Терри",
        "last_name": "Пратчетт",
        "birthday": "1948-04-28",
        "books": [
            {
                "name": "Безумная звезда",
            },
        ]
    }
]

def init_books(apps, schema_editor):
    Author = apps.get_model('library', "Author")
    Book = apps.get_model('library', "Book")

    for author_info in author_info_list:
        author = Author.objects.create(first_name=author_info["first_name"], last_name=author_info["last_name"], birthday=author_info["birthday"])
        for book_info in author_info["books"]:
            Book.objects.create(author_id=author.pk, name=book_info["name"], publish_date=book_info.get("publish_date"))


class Migration(migrations.Migration):

    dependencies = [
        ('library', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            init_books,
            reverse_code=migrations.RunPython.noop,
            elidable=True,
        ),
    ]
